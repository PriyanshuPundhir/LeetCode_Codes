/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
              Node* temp = head, *next;
  while (temp != NULL) {
    next = temp->next;

     Node* copy = new Node(temp->val);
    temp->next = copy;
    copy->next = next;

    temp = next;
  }
        
        temp = head;
        while (temp != NULL)    
    {
            
    if (temp->random != NULL) {
      temp->next->random = temp->random->next;
    }
    temp = temp->next->next;
  }
        
        
         temp = head;
Node* newHead = new Node(0);
 Node* copy, *cp2 = newHead;
while (temp != NULL) {
    next = temp->next->next;
    copy = temp->next;
    cp2->next = copy;
    cp2 = copy;
    temp->next = next;

    temp = next;
  }

  return newHead->next;
    }
};
